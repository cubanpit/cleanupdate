#!/bin/bash

#
# 'cleanupdate' by cubanpit at github.com
#
# Initial script found somewhere on internet (thanks to unknown).
# Menu taken from a script by Chrysostomus.
#
# This script should help you to mantain an ArchLinux-based system.
#
# Features:
# - update local database; (pacman -Syy)
# - update packages from repositories; (pacman -Syu)
# - update packages from AUR; (yaourt -Sua)
# - search and uninstall orphaned packages; (pacman -Rs $(pacman -Qdtq))
# - clean the cache of installed packages; (paccache -rk2)
# - clean the cache of uninstalled packages; (paccache -ruk0)
# - optimize (defragment) pacman database (NO SSD); (pacman-optimize)
# - clean temp file; (rm -fr /tmp/*)
# - clean old cache and thumbnail files;
# - search and clean residual files;
# - clean trash files; (rm -rfv ~/.local/share/Trash/*)
#
# Enjoy it!
#

BOLD=$(tput bold)
NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
PURPLE=$(tput setaf 5)

function ok_msg {
	msg=$1
	echo "${BOLD}[${GREEN}DONE${NORMAL}${BOLD}] $msg ${NORMAL}"
}

function no_msg {
	msg=$1
	echo "${BOLD}[${RED}NOT EXECUTED${NORMAL}${BOLD}] $msg ${NORMAL}"
}

function qsty_msg {
	msg=$1
	echo -n "${BOLD}${YELLOW}>>${NORMAL}${BOLD} $msg [Y/n]?${NORMAL} "
}

function qstn_msg {
	msg=$1
	echo -n "${BOLD}${YELLOW}>>${NORMAL}${BOLD} $msg [y/N]?${NORMAL} "
}

function sys_update {
	echo " ${BOLD}::System update::${NORMAL} "
	echo
	qsty_msg "Do you want to update local database"
	read sure
	if [[ $sure != "n" && $sure != "N" ]]
	then
		sudo pacman -Syy --color never
		ok_msg "Local database update"
	else no_msg "Local database update"
	fi
	echo
	qsty_msg "Do you want to upgrade official packages"
	read sure
	if [[ $sure != "n" && $sure != "N" ]]
    then
    	sudo pacman -Syu --color never
    	ok_msg "Official packages upgrade"
	else no_msg "Official packages upgrade"
	fi
	echo
	qsty_msg "Do you want to upgrade AUR packages"
	read sure
	if [[ $sure != "n" && $sure != "N" ]]
	then
		PAC=$(pacman -Qi pacaur 2> /dev/null)
		YAU=$(pacman -Qi yaourt 2> /dev/null)
		if [[ -n $PAC ]]
		then
			pacaur -Sua
		ok_msg "AUR upgrade"
		elif [[ -n $YAU ]]
		then
			yaourt -Sua --nocolor
			ok_msg "AUR upgrade"
		else
			echo "You don't have neither 'yaourt' nor 'pacaur' installed,"\
				"you can't access AUR updates through this script."
			echo
			no_msg "AUR upgrade"
		fi
	else no_msg "AUR upgrade"
	fi
}

function clean_pkg {
	echo " ${BOLD}::Clean packages::${NORMAL} "
	echo
	qstn_msg "Do you want search for orphaned packages"
	read sure
	if [[ $sure = "y" || $sure = "Y" ]]
    then
		ORP=$(pacman -Qdtq)
		if [[ -n $ORP ]]
		then
			sudo pacman --color never -Rs $ORP
		else
			echo "There isn't any orphaned packages."
		fi
		ok_msg "Orphaned packages"
	else no_msg "Orphaned packages"
	fi
	echo
	qsty_msg "Do you want to clean the cache of installed packages (keeping 2 versions)"
	read sure
	if [[ $sure != "n" && $sure != "N" ]]
    then
    	sudo paccache -rk2 --nocolor
    	ok_msg "Installed pkgs cache clean"
	else no_msg "Installed pkgs cache clean"
	fi
	echo
	qsty_msg "Do you want to completely clean the cache of uninstalled packages"
	read sure
	if [[ $sure != "n" && $sure != "N" ]]
    then
    	sudo paccache -ruk0 --nocolor
    	ok_msg "Uninstalled pkgs cache clean"
	else no_msg "Uninstalled pkgs cache clean"
	fi
	echo
	qstn_msg "Do you want to optimize (defragment) pacman database (NO SSD)"
	read sure
	if [[ $sure = "y" || $sure = "Y" ]]
    then
    	sudo pacman-optimize --nocolor
    	ok_msg "Database optimization"
	else no_msg "Database optimization"
	fi
}

function clean_file {
	echo " ${BOLD}::Clean files::${NORMAL} "
	echo
	qstn_msg "Do you want to clean every /tmp files"
	read sure
	if [[ $sure = "y" || $sure = "Y" ]]
    then
    	sudo rm -rf /tmp/*
    	ok_msg "Tmp files clean"
	else no_msg "Tmp files clean"
	fi
	echo
	qsty_msg "Do you want to clean old cache and thumbnails"
	read sure
	if [[ $sure != "n" && $sure != "N" ]]
   	then
   		find ~/.thumbnails -type f -atime +30 -print0 | xargs -0 /bin/rm -f
		find ~/.cache -type f -atime +30 -print0 | xargs -0 /bin/rm -f
   		ok_msg "Thumbs and cache clean"
	else no_msg "Thumbs and cache clean"
	fi
	echo
	qsty_msg "Do you want to search for residual files"
	read sure
	if [[ $sure != "n" && $sure != "N" ]]
    then
    	find $HOME -name "*~"
    	find $HOME -name "Desktop.ini"
    	find $HOME -name "Thumbs.db"
    	qstn_msg "Do you want to remove these files"
    	read sure
    	if [[ $sure = "y" || $sure = "Y" ]]
        then
        	find $HOME -name "*~" -print0 | xargs -0 /bin/rm -f
        	find $HOME -name "Desktop.ini" -print0 | xargs -0 /bin/rm -f
        	find $HOME -name "Thumbs.db" -print0 | xargs -0 /bin/rm -f
        	ok_msg "Residual files clean"
    	else no_msg "Residual files clean"
    	fi
	else no_msg "Residual files search"
	fi
	echo
	qstn_msg "Do you want to clean trash"
	read sure
	if [[ $sure = "y" || $sure = "Y" ]]
    then
    	sudo rm -rfv ~/.local/share/Trash/*
    	ok_msg "Trash clean"
	else no_msg "Trash clean"
	fi
}

function doc_eng {
less -R << EOF
Press 'q' to quit documentation

 ${BOLD}::Update system::${NORMAL}
 - update local database; (pacman -Syy)
 - update packages from repositories; (pacman -Syu)
 - update packages from AUR; (yaourt -Sua)

 ${BOLD}::Clean packages::${NORMAL}
 - search and uninstall orphaned packages; (pacman -Rs $(pacman -Qdtq))
 - clean the cache of installed packages; (paccache -rk2)
 - clean the cache of uninstalled packages; (paccache -ruk0)
 - optimize (defragment) pacman database (NO SSD); (pacman-optimize)

 ${BOLD}::Clean files::${NORMAL}
 - clean temp files; (rm -fr /tmp/*)
 - clean old cache and thumbnail files;
 - search and clean residual files;
 - clean trash files; (rm -rfv ~/.local/share/Trash/*)

Press 'q' to quit documentation
EOF
}

function main {
	while true; do
	clear
	echo
	echo "      _                                  _       _        "
	echo "  ___| | ___  __ _ _ __  _   _ _ __   __| | __ _| |_ ___  "
	echo " / __| |/ _ \/ _\` | '_ \| | | | '_ \ / _\` |/ _\` | __/ _ \ "
	echo "| (__| |  __/ (_| | | | | |_| | |_) | (_| | (_| | ||  __/ "
	echo " \___|_|\___|\__,_|_| |_|\__,_| .__/ \__,_|\__,_|\__\___| "
	echo "                              |_|                         "
#echo
#echo " ${BOLD}::Clean and update system::${NORMAL}       "
	echo
	echo " ┌────────────────────────────────────────┐"
	echo " │    1.  Update and clean everything     │"
	echo " │    2.  Update system                   │"
	echo " │    3.  Clean packages                  │"
	echo " │    4.  Clean files                     │"
	echo " │                                        │"
	echo " │    9.  Explain options                 │"
	echo " │    0.  Quit                            │"
	echo " └────────────────────────────────────────┘"
	echo
	echo -n " Select an option : "
	read -s -n1 ans
	case $ans in
		1)
			clear
			sys_update
			echo
			clean_pkg
			echo
			clean_file
			echo
			echo "Finished! Press any key to continue."
			read -s -n1
			;;
		2)
			clear
			sys_update
			echo
			echo "Finished! Press any key to continue."
			read -s -n1
			;;
		3)
			clear
			clean_pkg
			echo
			echo "Finished! Press any key to continue."
			read -s -n1
			;;
		4)
			clear
			clean_file
			echo
			echo "Finished! Press any key to continue."
			read -s -n1
			;;
		9)
			clear
			doc_eng
			;;
		0)
			clear && exit 0
			;;
		*)
			echo
			echo
			echo -n " There is no '$ans' option. Press any key to continue. "
			read -s -n1
			;;
	esac
	done
}

main

exit 1
